{
    "collab_server" : "",
    "contents" : "## turn off warnings globally\n# options(warn=-1)\n\n## encoding\nr_encoding = \"UTF-8\"\n\n## path to use for local and server use\nr_path <- ifelse ((file.exists(\"../base\") && file.exists(\"../quant\")), \"..\",\n                  system.file(package = \"radiant\"))\nif (r_path == \"\") r_path <- \"..\"  # if radiant is not installed revert to local inst\n# getOption(\"r_path\")\n# options(r_path = r_path); rm(r_path)\n\n## reactive programming in Shiny requires (some) use of global variables\n## global across all users: r_sessions\n## global for a user: r_data, r_state, r_ssuid\n## others are set in options: r_env, r_local, r_path\n\n## print options\noptions(\"width\"  = 250)\noptions(\"scipen\" = 100)\n\n## pkgs used\n# Martin: There were publishing problems with this list\n# r_pkgs <- c(\"DiagrammeR\", \"car\", \"gridExtra\", \"GPArotation\", \"psych\", \"wordcloud\",\n#             \"AlgDesign\", \"knitr\", \"lubridate\", \"ggplot2\", \"ggdendro\",\n#             \"pryr\", \"shiny\", \"magrittr\", \"tidyr\", \"dplyr\", \"broom\",\n#             \"htmlwidgets\", \"readr\", \"rmarkdown\", \"shinyAce\", \"data.tree\",\n#             \"yaml\",\"nnet\",\"NeuralNetTools\",\"sandwich\")\n\n# r_pkgs <- c(\"car\", \"gridExtra\", \"GPArotation\", \"psych\", \"wordcloud\",\n#             \"AlgDesign\", \"knitr\", \"lubridate\", \"ggplot2\", \"ggdendro\",\n#             \"pryr\", \"shiny\", \"magrittr\", \"tidyr\", \"dplyr\", \"broom\",\n#             \"htmlwidgets\", \"readr\", \"rmarkdown\", \"data.tree\",\n#             \"yaml\",\"nnet\",\"sandwich\")\n# \n# \n# # options(r_pkgs = r_pkgs); rm(r_pkgs)\n# \n# ## needed but clunky\n# sapply(r_pkgs, require, character.only = TRUE)\n\n## list of function arguments\nr_functions <-\n  list(\"n\" = \"length\", \"n_missing\" = \"n_missing\", \"n_distinct\" = \"n_distinct\",\n       \"mean\" = \"mean_rm\", \"median\" = \"median_rm\", \"sum\" = \"sum_rm\",\n       \"var\" = \"var_rm\", \"sd\" = \"sd_rm\", \"se\" = \"serr\", \"cv\" = \"cv\", \"varp\" = \"varp_rm\",\n       \"sdp\" = \"sdp_rm\", \"min\" = \"min_rm\", \"max\" = \"max_rm\", \"5%\" = \"p05\",\n       \"10%\" = \"p10\", \"25%\" = \"p25\", \"75%\" = \"p75\", \"90%\" = \"p90\", \"95%\" = \"p95\",\n       \"skew\" = \"skew\",\"kurtosis\" = \"kurtosi\")\n# options(r_functions = r_functions); rm(r_functions)\n\n## for report and code in menu R\nknitr::opts_knit$set(progress = TRUE)\nknitr::opts_chunk$set(echo = FALSE, comment = NA, cache = FALSE, message = FALSE,\n                      warning = FALSE, fig.path = \"~/r_figures/\")\n\n## running local or on a server\nif (Sys.getenv('SHINY_PORT') == \"\") {\n  r_local <- TRUE\n  options(shiny.maxRequestSize = -1) ## no limit to filesize locally\n  ## if radiant package was not loaded load dependencies\n  # if (!\"package:radiant\" %in% search())\n    # sapply(r_pkgs, require, character.only = TRUE)\n} else {\n  r_local <- FALSE\n  options(shiny.maxRequestSize = 10 * 1024^2)   ## limit upload filesize on server (5MB)\n}\n\n## environment to hold session information\nr_sessions <- new.env(parent = emptyenv())\n\n## create directory to hold session files\nfile.path(normalizePath(\"~\"),\"r_sessions\") %>% {if (!file.exists(.)) dir.create(.)}\n\n## adding the figures path to avoid making a copy of all figures in www/figures\naddResourcePath(\"figures\", file.path(r_path,\"base/tools/help/figures/\"))\naddResourcePath(\"imgs\", file.path(r_path,\"base/www/imgs/\"))\naddResourcePath(\"js\", file.path(r_path,\"base/www/js/\"))\n\nnav_ui <-\n  list(windowTitle = \"Radiant\", id = \"nav_radiant\", inverse = TRUE,\n       collapsible = TRUE, tabPanel(\"Data\", withMathJax(), uiOutput(\"ui_data\")))\n\nr_help <- \"help_base\"\n\nshared_ui <-\n  tagList(\n    navbarMenu(\"R\",\n               tabPanel(\"Report\", uiOutput(\"report\"), icon = icon(\"edit\")),\n               tabPanel(\"Code\", uiOutput(\"rcode\"), icon = icon(\"code\"))\n    ),\n\n    navbarMenu(\"\", icon = icon(\"save\"),\n               tabPanel(downloadLink(\"saveStateNav\", \" Save state\", class = \"fa fa-download\")),\n               ## waiting for this feature in Shiny\n               # tabPanel(tags$a(id = \"loadStateNav\", href = \"\", class = \"shiny-input-container\",\n               #                 type='file', accept='.rmd,.Rmd,.md', list(icon(\"refresh\"), \"Refresh\"))),\n               # tabPanel(uploadLink(\"loadState\", \"Load state\"), icon = icon(\"folder-open\")),\n               tabPanel(actionLink(\"shareState\", \"Share state\", icon = icon(\"share\"))),\n               tabPanel(\"View state\", uiOutput(\"view_state\"), icon = icon(\"user\"))\n    ),\n\n    ## works but badly aligned in navbar\n    # tabPanel(tags$a(id = \"quitApp\", href = \"#\", class = \"action-button\",\n    #          list(icon(\"power-off\"), \"\"), onclick = \"window.close();\")),\n\n    ## stop app *and* close browser window\n    navbarMenu(\"\", icon = icon(\"power-off\"),\n               tabPanel(actionLink(\"stop_radiant\", \"Stop\", icon = icon(\"stop\"),\n                                   onclick = \"setTimeout(function(){window.close();}, 100); \")),\n               if (rstudioapi::isAvailable()) {\n                 tabPanel(actionLink(\"stop_radiant_rmd\", \"Stop & Report to Rstudio\", icon = icon(\"stop\"),\n                                     onclick = \"setTimeout(function(){window.close();}, 100); \"))\n               } else {\n                 tabPanel(\"\")\n               },\n               tabPanel(tags$a(id = \"refresh_radiant\", href = \"#\", class = \"action-button\",\n                               list(icon(\"refresh\"), \"Refresh\"), onclick = \"window.location.reload();\")),\n               ## had to remove class = \"action-button\" to make this work\n               tabPanel(tags$a(id = \"new_session\", href = \"./\", target = \"_blank\",\n                               list(icon(\"plus\"), \"New session\")))\n    )\n  )\n\njs_head <-\n  tags$head(\n    tags$script(src = \"js/session.js\"),\n    tags$script(src = \"js/returnTextAreaBinding.js\"),\n    tags$script(src = \"js/returnTextInputBinding.js\"),\n    # tags$script(src = \"js/draggable_modal.js\"),\n    tags$script(src = \"js/video_reset.js\"),\n    tags$link(rel = \"shortcut icon\", href = \"imgs/icon.png\")\n  )\n\n\n",
    "created" : 1460621931297.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4080066863",
    "id" : "785EDAF2",
    "lastKnownWriteTime" : 1460622678,
    "last_content_update" : 1460622678887,
    "path" : "~/Github/ACIT-Team-Reporting_Radiant/global.R",
    "project_path" : "global.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}