{
    "collab_server" : "",
    "contents" : "################################################################\n# Run R-code within Radiant using the shinyAce editor\n################################################################\nr_example <- \"## get the active dataset and show the first few observations\n.getdata() %>% head\n\n## access a specific dataset by name\nr_data[['diamonds']] %>% select(price, clarity) %>% head\n\n## add a variable to the diamonds data\ndat <- r_data[['diamonds']]\ndat$log_price <- log(dat$price)\n\n## show the first observations\ndat %>% select(price, log_price) %>% head\n\n## create a histogram of prices\ndat %>% ggplot(aes(x = price)) + geom_histogram()\n\n## and a histogram of log-prices\ndat %>% ggplot(aes(x = log_price)) + geom_histogram()\n\n## open help in the R-studio viewer from Radiant\nhelp(package = 'radiant')\n\n## if you are familiar with Shiny you can call reactives here\n## for example, if you just transformed some variables in Data > Transform\n## you can call the transform_main reacive to see the latest result\n## this can very useful for debugging\ntransform_main() %>% head\"\n\noutput$rcode <- renderUI({\n  tagList(\n    with(tags,\n      table(\n            td(help_modal('Code','code_help',\n                       inclMD(file.path(r_path,\"base/tools/help/code.md\")))),\n            td(HTML(\"&nbsp;&nbsp;\")),\n            td(actionButton(\"rEval\", \"Run code\")),\n            td(downloadButton(\"save2HTML\", \"Save HTML\")),\n            td(downloadButton('saveCode', 'Save')),\n            td(HTML(\"<div class='form-group shiny-input-container'>\n                <input id='load_code' name='load_code' type='file' accept='.r,.R'/>\n              </div>\"))\n            #, td(fileInput('sourceCode', 'Source R-code', multiple=TRUE))\n      )\n    ),\n\n    shinyAce::aceEditor(\"rmd_code\", mode = \"r\",\n      vimKeyBinding = ifelse (is.null(r_data$vim_keys), FALSE, r_data$vim_keys),\n      height=\"auto\",\n      selectionId = \"rmd_code_selection\",\n      value = state_init(\"rmd_code\",r_example),\n      hotkeys = list(runKeyCode = list(win =\"CTRL-ENTER\", mac =\"CMD-ENTER\"))),\n    htmlOutput(\"rmd_code_output\")\n  )\n})\n\nvalsCode <- reactiveValues(code = 0)\n\nobserve({\n  input$runKeyCode\n  if (!is.null(input$rEval)) isolate(valsCode$code <- valsCode$code + 1)\n})\n\noutput$rmd_code_output <- renderUI({\n\n  if (valsCode$code == 1) return()\n  isolate({\n    if (r_local) {\n      rmd_code <- if (is_empty(input$rmd_code_selection)) input$rmd_code\n                  else input$rmd_code_selection\n\n      paste0(\"```{r cache = FALSE, echo = TRUE}\\n\", rmd_code ,\"\\n```\") %>%\n        ## need r_env so changes are reflected in the shiny environment\n        ## does mean user can mess things up pretty good so not a good idea on a server\n        knitr::knit2html(text = ., fragment.only = TRUE, quiet = TRUE, envir = r_env) %>%\n        HTML\n    } else {\n      HTML(\"<h2>Code is not evaluated when running Radiant on a server</h2>\")\n    }\n  })\n})\n\noutput$saveCode <- downloadHandler(\n  filename = function() {\"rcode.R\"},\n  content = function(file) {\n    isolate({\n      cat(input$rmd_code,file=file,sep=\"\\n\")\n    })\n  }\n)\n\n## loading r-code from disk\nobserve({\n  inFile <- input$load_code\n  if (!is.null(inFile)) {\n    isolate({\n      paste0(readLines(inFile$datapath), collapse = \"\\n\") %>%\n        shinyAce::updateAceEditor(session, \"rmd_code\", value = .)\n    })\n  }\n})\n\noutput$save2HTML <- downloadHandler(\n  filename = function() {\"code.html\"},\n  content = function(file) {\n    if (r_local) {\n      isolate({\n        withProgress(message = \"Knitting report\", value = 0, {\n          rmd_code <- if (is_empty(input$rmd_code_selection)) input$rmd_code\n                      else input$rmd_code_selection\n          paste0(\"```{r cache = FALSE, echo = TRUE}\\n\", rmd_code ,\"\\n```\") %>%\n          knitIt %>% cat(file=file,sep=\"\\n\")\n          # knitr::knit2html(text = ., fragment.only = TRUE, quiet = TRUE, envir = r_env) %>%\n          # HTML %>% cat(file=file,sep=\"\\n\")\n        })\n      })\n    }\n  }\n)\n",
    "created" : 1460623522599.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3196641228",
    "id" : "D4140192",
    "lastKnownWriteTime" : 1460487092,
    "last_content_update" : 1460487092,
    "path" : "~/Github/ACIT-Team-Reporting_Radiant/tools/app/code.R",
    "project_path" : "tools/app/code.R",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}